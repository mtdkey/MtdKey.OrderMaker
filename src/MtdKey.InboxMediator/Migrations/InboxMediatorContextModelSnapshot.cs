// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MtdKey.InboxMediator.Data;

#nullable disable

namespace MtdKey.InboxMediator.Migrations
{
    [DbContext(typeof(InboxMediatorContext))]
    partial class InboxMediatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MtdKey.InboxMediator.Data.EmailMediator", b =>
                {
                    b.Property<string>("EmailAsKey")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Server")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("UseSSL")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("EmailAsKey");

                    b.ToTable("email_mediators");
                });

            modelBuilder.Entity("MtdKey.InboxMediator.Data.InboxHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("EmailAsKey")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<uint>("UID")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("EmailAsKey", "UID")
                        .IsUnique();

                    b.ToTable("inbox_headers");
                });

            modelBuilder.Entity("MtdKey.InboxMediator.Data.LoaderFlag", b =>
                {
                    b.Property<string>("EmailAsKey")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Complete")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("EmailAsKey");

                    b.ToTable("loader_flags");
                });

            modelBuilder.Entity("MtdKey.InboxMediator.Data.ReaderFlag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("EmailAsKey")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<uint>("MaxUID")
                        .HasColumnType("int unsigned");

                    b.Property<Guid>("ReaderId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("EmailAsKey", "ReaderId")
                        .IsUnique();

                    b.ToTable("reader_flags");
                });

            modelBuilder.Entity("MtdKey.InboxMediator.Data.InboxHeader", b =>
                {
                    b.HasOne("MtdKey.InboxMediator.Data.EmailMediator", "EmailMediator")
                        .WithMany("InboxHeaders")
                        .HasForeignKey("EmailAsKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailMediator");
                });

            modelBuilder.Entity("MtdKey.InboxMediator.Data.LoaderFlag", b =>
                {
                    b.HasOne("MtdKey.InboxMediator.Data.EmailMediator", "EmailMediator")
                        .WithMany("LoaderFlags")
                        .HasForeignKey("EmailAsKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailMediator");
                });

            modelBuilder.Entity("MtdKey.InboxMediator.Data.ReaderFlag", b =>
                {
                    b.HasOne("MtdKey.InboxMediator.Data.EmailMediator", "EmailMediator")
                        .WithMany("ReaderFlags")
                        .HasForeignKey("EmailAsKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailMediator");
                });

            modelBuilder.Entity("MtdKey.InboxMediator.Data.EmailMediator", b =>
                {
                    b.Navigation("InboxHeaders");

                    b.Navigation("LoaderFlags");

                    b.Navigation("ReaderFlags");
                });
#pragma warning restore 612, 618
        }
    }
}
